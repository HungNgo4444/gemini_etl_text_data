#!/usr/bin/env python3
"""
Demo script ƒë·ªÉ t·∫°o d·ªØ li·ªáu m·∫´u v√† test AI ETL Data
"""

import pandas as pd
import os
from pathlib import Path

def create_sample_data():
    """T·∫°o file d·ªØ li·ªáu m·∫´u ƒë·ªÉ test"""
    
    sample_data = {
        'ID': range(1, 21),
        'MESSAGE': [
            "Kh√°ch h√†ng h·ªèi v·ªÅ gi√° s·∫£n ph·∫©m v√† th·ªùi gian giao h√†ng",
            "Ph·∫£n √°nh v·ªÅ ch·∫•t l∆∞·ª£ng d·ªãch v·ª• kh√¥ng t·ªët, nh√¢n vi√™n thi·∫øu nhi·ªát t√¨nh",
            "Y√™u c·∫ßu t∆∞ v·∫•n v·ªÅ c√°c g√≥i b·∫£o hi·ªÉm ph√π h·ª£p v·ªõi gia ƒë√¨nh",
            "Khi·∫øu n·∫°i v·ªÅ vi·ªác giao h√†ng ch·∫≠m v√† s·∫£n ph·∫©m b·ªã h·ªèng",
            "C·∫£m ∆°n c√¥ng ty v·ªÅ d·ªãch v·ª• t·ªët v√† s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng",
            "H·ªèi v·ªÅ ch√≠nh s√°ch ƒë·ªïi tr·∫£ h√†ng v√† b·∫£o h√†nh s·∫£n ph·∫©m",
            "ƒê·ªÅ xu·∫•t c·∫£i thi·ªán giao di·ªán website ƒë·ªÉ d·ªÖ s·ª≠ d·ª•ng h∆°n",
            "Ph√†n n√†n v·ªÅ th√°i ƒë·ªô ph·ª•c v·ª• c·ªßa nh√¢n vi√™n b√°n h√†ng",
            "Y√™u c·∫ßu h·ªó tr·ª£ k·ªπ thu·∫≠t ƒë·ªÉ kh·∫Øc ph·ª•c l·ªói ·ª©ng d·ª•ng",
            "Khen ng·ª£i v·ªÅ ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i h·∫•p d·∫´n",
            "H·ªèi v·ªÅ th·ªß t·ª•c m·ªü t√†i kho·∫£n v√† c√°c gi·∫•y t·ªù c·∫ßn thi·∫øt",
            "B√°o c√°o l·ªói h·ªá th·ªëng kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n",
            "Y√™u c·∫ßu t∆∞ v·∫•n ƒë·∫ßu t∆∞ v√† c√°c g√≥i ti·∫øt ki·ªám",
            "Ph·∫£n h·ªìi t√≠ch c·ª±c v·ªÅ ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m m·ªõi",
            "Khi·∫øu n·∫°i v·ªÅ ph√≠ d·ªãch v·ª• cao so v·ªõi ƒë·ªëi th·ªß c·∫°nh tranh",
            "ƒê·ªÅ ngh·ªã th√™m ph∆∞∆°ng th·ª©c thanh to√°n online",
            "H·ªèi v·ªÅ l·ªãch l√†m vi·ªác v√† th√¥ng tin li√™n h·ªá chi nh√°nh",
            "Ph·∫£n √°nh v·ªÅ m√¥i tr∆∞·ªùng c·ª≠a h√†ng kh√¥ng tho·∫£i m√°i",
            "Y√™u c·∫ßu h·ªßy d·ªãch v·ª• v√† ho√†n ti·ªÅn ph√≠ ƒë√£ ƒë√≥ng",
            "C·∫£m ∆°n v·ªÅ s·ª± h·ªó tr·ª£ nhi·ªát t√¨nh c·ªßa ƒë·ªôi ng≈© CSKH"
        ],
        'DATE': pd.date_range('2025-01-01', periods=20, freq='D'),
        'CATEGORY': ['INQUIRY', 'COMPLAINT', 'INQUIRY', 'COMPLAINT', 'PRAISE', 
                    'INQUIRY', 'SUGGESTION', 'COMPLAINT', 'SUPPORT', 'PRAISE',
                    'INQUIRY', 'ISSUE', 'INQUIRY', 'FEEDBACK', 'COMPLAINT',
                    'SUGGESTION', 'INQUIRY', 'COMPLAINT', 'REQUEST', 'PRAISE']
    }
    
    df = pd.DataFrame(sample_data)
    
    # L∆∞u file Excel
    excel_file = Path(__file__).parent / "sample_data.xlsx"
    df.to_excel(excel_file, index=False)
    print(f"‚úÖ ƒê√£ t·∫°o file m·∫´u Excel: {excel_file}")
    
    # L∆∞u file CSV
    csv_file = Path(__file__).parent / "sample_data.csv"
    df.to_csv(csv_file, index=False, encoding='utf-8-sig')
    print(f"‚úÖ ƒê√£ t·∫°o file m·∫´u CSV: {csv_file}")
    
    return excel_file, csv_file

def run_demo():
    """Ch·∫°y demo v·ªõi d·ªØ li·ªáu m·∫´u"""
    print("üöÄ AI ETL DATA - DEMO")
    print("="*50)
    
    # T·∫°o d·ªØ li·ªáu m·∫´u
    excel_file, csv_file = create_sample_data()
    
    print(f"\nüìä D·ªØ li·ªáu m·∫´u ƒë√£ ƒë∆∞·ª£c t·∫°o:")
    print(f"   üìÅ Excel: {excel_file.name}")
    print(f"   üìÅ CSV: {csv_file.name}")
    
    print(f"\nüí° ƒê·ªÉ test ch∆∞∆°ng tr√¨nh:")
    print(f"   1. Ch·∫°y: python main.py")
    print(f"   2. Nh·∫≠p API Key Gemini c·ªßa b·∫°n")
    print(f"   3. Ch·ªçn model (khuy·∫øn ngh·ªã: gemma-3-27b-it)")
    print(f"   4. Nh·∫≠p ƒë∆∞·ªùng d·∫´n file: {excel_file}")
    print(f"   5. Ch·ªçn c·ªôt: MESSAGE")
    print(f"   6. Ch·ªçn template prompt ph√π h·ª£p")
    
    print(f"\nüìã V√≠ d·ª• prompt templates ƒë·ªÉ test:")
    print(f"   ‚Ä¢ T√≥m t·∫Øt: 'H√£y t√≥m t·∫Øt n·ªôi dung kh√°ch h√†ng trong 1-2 c√¢u ng·∫Øn g·ªçn'")
    print(f"   ‚Ä¢ Ph√¢n lo·∫°i: 'Ph√¢n lo·∫°i n·ªôi dung n√†y th√†nh: Khi·∫øu n·∫°i, H·ªèi ƒë√°p, Khen ng·ª£i, ƒê·ªÅ xu·∫•t'")
    print(f"   ‚Ä¢ C·∫£m x√∫c: 'Ph√¢n t√≠ch c·∫£m x√∫c c·ªßa kh√°ch h√†ng: T√≠ch c·ª±c, Ti√™u c·ª±c, hay Trung t√≠nh'")
    
    # Preview d·ªØ li·ªáu
    df = pd.read_excel(excel_file)
    print(f"\nüîç Preview d·ªØ li·ªáu (5 d√≤ng ƒë·∫ßu):")
    print("-" * 80)
    for i in range(min(5, len(df))):
        print(f"ID {df.iloc[i]['ID']}: {df.iloc[i]['MESSAGE'][:80]}...")
    
    print(f"\nüéØ K·∫øt qu·∫£ mong ƒë·ª£i:")
    print(f"   - File output: sample_data_ai_result_<timestamp>.xlsx")
    print(f"   - C·ªôt m·ªõi: AI_RESULT v·ªõi k·∫øt qu·∫£ x·ª≠ l√Ω AI")
    print(f"   - Th·ªùi gian ∆∞·ªõc t√≠nh: ~1-2 ph√∫t (20 records)")

if __name__ == "__main__":
    run_demo() 