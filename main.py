#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
AI ETL Data - C√¥ng c·ª• x·ª≠ l√Ω d·ªØ li·ªáu text v·ªõi Gemini AI v√† OpenAI
H·ªó tr·ª£ Batch Processing v√† Parallel Processing cho t·ªëc ƒë·ªô t·ªëi ∆∞u
"""

import sys
import os
from pathlib import Path

# Th√™m th∆∞ m·ª•c hi·ªán t·∫°i v√†o Python path
sys.path.append(str(Path(__file__).parent))

from user_interface import get_user_input, show_main_menu
from processor import run_processor

def main():
    """H√†m ch√≠nh c·ªßa ch∆∞∆°ng tr√¨nh"""
    try:
        # Hi·ªÉn th·ªã menu ch√≠nh
        show_main_menu()
        
        # Thu th·∫≠p th√¥ng tin t·ª´ user
        config = get_user_input()
        
        if not config:
            print("‚ùå Kh√¥ng th·ªÉ thu th·∫≠p th√¥ng tin c·∫•u h√¨nh!")
            return False
        
        # Ch·∫°y processor
        success = run_processor(config)
        
        if success:
            print("\nüéâ Ho√†n th√†nh th√†nh c√¥ng!")
            print("üìß Li√™n h·ªá: AI ETL Data Team")
            print("üîó GitHub: https://github.com/HungNgo4444/gemini_etl_text_data")
        else:
            print("\n‚ùå Qu√° tr√¨nh x·ª≠ l√Ω g·∫∑p l·ªói!")
            
        return success
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è Ng∆∞·ªùi d√πng d·ª´ng ch∆∞∆°ng tr√¨nh.")
        return False
    except Exception as e:
        print(f"\nüí• L·ªói kh√¥ng mong mu·ªën: {str(e)}")
        return False

def check_dependencies():
    """Ki·ªÉm tra c√°c dependencies c·∫ßn thi·∫øt"""
    required_packages = {
        'pandas': 'pandas',
        'google-generativeai': 'google.generativeai', 
        'openai': 'openai',
        'tqdm': 'tqdm',
        'openpyxl': 'openpyxl'
    }
    
    missing_packages = []
    
    for package_name, import_name in required_packages.items():
        try:
            __import__(import_name)
        except ImportError:
            missing_packages.append(package_name)
    
    if missing_packages:
        print("‚ùå Thi·∫øu c√°c package sau:")
        for package in missing_packages:
            print(f"   - {package}")
        print("\nüí° C√†i ƒë·∫∑t b·∫±ng l·ªánh:")
        print(f"   pip install {' '.join(missing_packages)}")
        return False
    
    return True

if __name__ == "__main__":
    # Ki·ªÉm tra dependencies tr∆∞·ªõc khi ch·∫°y
    if not check_dependencies():
        sys.exit(1)
    
    # Ch·∫°y ch∆∞∆°ng tr√¨nh ch√≠nh
    main() 